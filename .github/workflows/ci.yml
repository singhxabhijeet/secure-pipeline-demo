name: CI Security Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  sast-scan:
    runs-on: ubuntu-latest
    env:
      SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install Semgrep
        run: pip install semgrep
      - name: Run Semgrep CI Scan
        run: semgrep ci

  dependency-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run Trivy vulnerability scanner for dependencies
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: 'true'
          severity: 'CRITICAL,HIGH'

  build-and-scan-image:
    runs-on: ubuntu-latest
    # This job depends on the other two passing first
    needs: [sast-scan, dependency-scan]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          # We build the image and load it into the local Docker daemon of the runner
          load: true
          # Give the image a tag so we can reference it
          tags: secure-app:latest

      - name: Run Trivy vulnerability scanner on the image
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'image'
          image-ref: 'secure-app:latest'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: 'true'
          severity: 'CRITICAL,HIGH'