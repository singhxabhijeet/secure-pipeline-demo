name: CI Security Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  sast-scan:
    runs-on: ubuntu-latest
    env:
      SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install Semgrep
        run: pip install semgrep
      - name: Run Semgrep CI Scan
        run: semgrep ci

  secret-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Run Gitleaks scan
        uses: gitleaks/gitleaks-action@v2
      
      - name: Upload Gitleaks report as artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: gitleaks-results
          path: results.sarif

  dependency-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run Trivy vulnerability scanner for dependencies
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: 'true'
          severity: 'CRITICAL,HIGH'

  build-scan-and-generate-sbom:
    runs-on: ubuntu-latest
    needs: [sast-scan, dependency-scan, secret-scan]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          load: true
          tags: secure-app:latest
      - name: Run Trivy vulnerability scanner on the image
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'image'
          image-ref: 'secure-app:latest'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: 'true'
          severity: 'CRITICAL,HIGH'
      - name: Generate SBOM
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'image'
          image-ref: 'secure-app:latest'
          format: 'cyclonedx'
          output: 'sbom.json'
      - name: Upload SBOM as build artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.json

  upload-sarif-results:
    runs-on: ubuntu-latest
    needs: [secret-scan]
    permissions:
      security-events: write
    steps:
      - name: Download Gitleaks SARIF artifact
        uses: actions/download-artifact@v4
        with:
          name: gitleaks-results
          path: .
      - name: Upload SARIF to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif

  scan-sbom:
    runs-on: ubuntu-latest
    needs: [build-scan-and-generate-sbom]
    steps:
      - name: Download SBOM artifact
        uses: actions/download-artifact@v4
        with:
          name: sbom
          path: .
      - name: Run Trivy vulnerability scanner on SBOM
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'sbom'
          scan-ref: 'sbom.json'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: 'true'
          severity: 'CRITICAL,HIGH'